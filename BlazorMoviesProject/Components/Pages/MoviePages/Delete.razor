@page "/movies/delete"
@using Microsoft.EntityFrameworkCore
@using BlazorMoviesProject.Data
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Movie</h2>
    <hr />
    @if (movie is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@movie.Title</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Year</dt>
            <dd class="col-sm-10">@movie.Year</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Rating</dt>
            <dd class="col-sm-10">@movie.Rating</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CoverImagePath</dt>
            <dd class="col-sm-10">@movie.CoverImagePath</dd>
        </dl>
        <EditForm method="post" Model="movie" OnValidSubmit="DeleteMovie" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(movie is null)">Delete</button> |
            <a href="/movies">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Movie? movie;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        movie = await DbContext.Movies.FirstOrDefaultAsync(m => m.Id == Id);

        if (movie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteMovie()
    {
        DbContext.Movies.Remove(movie!);
        await DbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/movies");
    }
}
